<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Company Orders - ElectroLand</title>
  <link rel="stylesheet" href="/styles.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    body {
      background: #f5f6fa;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }
    .container {
      margin-top: 90px;
      display: flex;
      flex: 1;
      gap: 25px;
      padding: 0 20px !important;
      max-width: 100%;
    }
    .content-area {
      background: #ffffff;
      border-radius: 15px;
      padding: 20px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
      flex: 1;
      overflow-y: auto;
      height: calc(100vh - 90px);
    }
    .page-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      flex-wrap: wrap;
      gap: 15px;
    }
    .page-header h1 {
      color: #2d3436;
      font-size: 1.5rem;
      margin: 0;
    }
    .btn-pending {
      padding: 10px 20px;
      background: #0984e3;
      color: white;
      border: none;
      border-radius: 8px;
      font-size: 0.9rem;
      cursor: pointer;
      transition: all 0.3s;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 8px;
      font-weight: 500;
    }
    .btn-pending:hover {
      background: #0770c4;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(9, 132, 227, 0.3);
    }
    .btn-pending svg {
      width: 18px;
      height: 18px;
    }
    .table-wrapper {
      overflow-x: auto;
    }
    table {
      width: 100%;
      min-width: 600px;
      border-collapse: collapse;
      background: #ffffff;
      border-radius: 10px;
    }
    thead {
      background: #333333;
    }
    th, td {
      padding: 12px;
      text-align: left;
      font-size: 0.9rem;
      border-bottom: 1px solid #e6e9f0;
    }
    th {
      color: white;
      border-bottom: 2px solid #ffffff;
    }
    tr:last-child td {
      border-bottom: none;
    }
    tr:nth-child(even) {
      background: #f8f9fd;
    }
    tr.clickable:hover {
      background-color: #e6f3ff;
      cursor: pointer;
    }
    .status-badge {
      padding: 4px 12px;
      border-radius: 12px;
      font-size: 0.85rem;
      font-weight: 500;
    }
    .status-pending {
      background: #fff3cd;
      color: #856404;
    }
    .status-accepted {
      background: #d4edda;
      color: #155724;
    }
    .status-rejected {
      background: #f8d7da;
      color: #721c24;
    }
    .status-shipped {
      background: #d1ecf1;
      color: #0c5460;
    }
    .status-delivered {
      background: #d4edda;
      color: #155724;
    }
    .status-cancelled {
      background: #e2e3e5;
      color: #383d41;
    }
    #loading {
      text-align: center;
      padding: 20px;
      color: #636e72;
    }
    #table-container {
      display: none;
    }
    @media (max-width: 768px) {
      .container {
        flex-direction: column;
        padding: 0 10px !important;
      }
      .content-area {
        padding: 15px;
        height: auto;
        overflow-y: auto;
      }
      .page-header {
        flex-direction: column;
        align-items: flex-start;
      }
      .btn-pending {
        width: 100%;
        justify-content: center;
      }
      table {
        display: block;
        min-width: 0;
      }
      thead {
        display: none;
      }
      tr {
        display: flex;
        flex-direction: column;
        margin-bottom: 15px;
        border: 1px solid #e6e9f0;
        border-radius: 5px;
        padding: 10px;
      }
      td {
        display: flex;
        justify-content: space-between;
        padding: 8px 0;
        border-bottom: 1px dashed #e6e9f0;
      }
      td:before {
        content: attr(data-label);
        font-weight: bold;
        color: #2d3436;
        min-width: 100px;
      }
    }
  </style>
</head>
<body>
  <% try { %>
    <%- include('../../partials/navbar') %>
  <% } catch (e) { %>
    <p>Error rendering navbar: <%= e.message %></p>
  <% } %>
  <div class="container">
    <% try { %>
      <%- include('../../partials/company_sidebar') %>
    <% } catch (e) { %>
      <p>Error rendering sidebar: <%= e.message %></p>
    <% } %>
    <div class="content-area">
      <div class="page-header">
        <h1>Manage Orders</h1>
        <a href="/company/orders/pending" class="btn-pending">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          Pending Orders
        </a>
      </div>
      <div id="loading">Loading orders...</div>
      <div class="table-wrapper" id="table-container">
        <table>
          <thead>
            <tr>
              <th>Order ID</th>
              <th>Branch</th>
              <th>Product</th>
              <th>Quantity</th>
              <th>Status</th>
              <th>Delivery Date</th>
            </tr>
          </thead>
          <tbody id="orders-tbody">
            <!-- Data populated via JS -->
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <% try { %>
    <%- include('../../partials/footer') %>
  <% } catch (e) { %>
    <p>Error rendering footer: <%= e.message %></p>
  <% } %>
  <script>
    const tbody = document.getElementById('orders-tbody');
    const loading = document.getElementById('loading');
    const tableContainer = document.getElementById('table-container');

    function getStatusClass(status) {
      const statusLower = status.toLowerCase();
      if (statusLower === 'pending') return 'status-pending';
      if (statusLower === 'accepted') return 'status-accepted';
      if (statusLower === 'rejected') return 'status-rejected';
      if (statusLower === 'shipped') return 'status-shipped';
      if (statusLower === 'delivered') return 'status-delivered';
      if (statusLower === 'cancelled') return 'status-cancelled';
      return '';
    }

    async function loadOrders() {
      try {
        const response = await fetch('/company/orders/data');
        if (!response.ok) throw new Error('Failed to fetch');
        const orders = await response.json();
        tbody.innerHTML = '';
        orders.forEach(order => {
          const row = document.createElement('tr');
          row.classList.add('clickable');
          // All orders are now editable
          row.onclick = () => window.location.href = `/company/orders/edit/${order.order_id}`;
          const statusClass = getStatusClass(order.status);
          row.innerHTML = `
            <td data-label="Order ID">${order.order_id}</td>
            <td data-label="Branch">${order.branch_name}</td>
            <td data-label="Product">${order.product_name}</td>
            <td data-label="Quantity">${order.quantity}</td>
            <td data-label="Status"><span class="status-badge ${statusClass}">${order.status}</span></td>
            <td data-label="Delivery Date">
              ${order.delivery_date ? new Date(order.delivery_date).toLocaleDateString() : 'Not Set'}
            </td>
          `;
          tbody.appendChild(row);
        });
        loading.style.display = 'none';
        tableContainer.style.display = 'block';
      } catch (error) {
        console.error('Error loading orders:', error);
        loading.textContent = 'Error loading orders. Please refresh.';
      }
    }

    loadOrders();
  </script>
</body>
</html>