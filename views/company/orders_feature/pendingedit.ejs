<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Pending Order - ElectroLand</title>
  <link rel="stylesheet" href="/styles.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
  <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    body {
      background: #f5f6fa;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }
    .container {
      margin-top: 90px;
      display: flex;
      flex: 1;
      gap: 25px;
      padding: 0 20px !important;
      max-width: 100%;
    }
    .content-area {
      background: #ffffff;
      border-radius: 15px;
      padding: 30px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
      flex: 1;
      max-width: 900px;
    }
    .page-header {
      margin-bottom: 30px;
      padding-bottom: 20px;
      border-bottom: 2px solid #e6e9f0;
    }
    .page-header h1 {
      color: #2d3436;
      font-size: 1.8rem;
      margin: 0;
    }
    .section-title {
      font-size: 1.2rem;
      font-weight: 600;
      color: #2d3436;
      margin: 25px 0 15px 0;
      display: flex;
      align-items: center;
      gap: 10px;
    }
    .section-title:first-of-type {
      margin-top: 0;
    }
    .section-title svg {
      width: 22px;
      height: 22px;
      color: #0984e3;
    }
    .info-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      background: #f8f9fd;
      padding: 20px;
      border-radius: 10px;
      margin-bottom: 25px;
    }
    .info-item {
      display: flex;
      flex-direction: column;
      gap: 5px;
    }
    .info-label {
      font-size: 0.85rem;
      color: #636e72;
      font-weight: 500;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    .info-value {
      font-size: 1rem;
      color: #2d3436;
      font-weight: 500;
      padding: 8px 0;
    }
    .form-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      margin-bottom: 25px;
    }
    .form-group {
      display: flex;
      flex-direction: column;
      gap: 8px;
    }
    .form-group label {
      font-size: 0.9rem;
      color: #2d3436;
      font-weight: 500;
    }
    .form-group label .required {
      color: #d63031;
      margin-left: 3px;
    }
    .form-group select,
    .form-group input {
      padding: 12px 15px;
      border: 2px solid #dfe6e9;
      border-radius: 8px;
      font-size: 0.95rem;
      transition: all 0.3s;
      background: white;
    }
    .form-group select:focus,
    .form-group input:focus {
      outline: none;
      border-color: #0984e3;
      box-shadow: 0 0 0 3px rgba(9, 132, 227, 0.1);
    }
    .form-group select:hover,
    .form-group input:hover {
      border-color: #b2bec3;
    }
    .button-group {
      display: flex;
      gap: 15px;
      margin-top: 30px;
      padding-top: 20px;
      border-top: 2px solid #e6e9f0;
    }
    .btn {
      padding: 12px 30px;
      border: none;
      border-radius: 8px;
      font-size: 1rem;
      cursor: pointer;
      transition: all 0.3s;
      font-weight: 500;
      display: inline-flex;
      align-items: center;
      gap: 8px;
    }
    .btn svg {
      width: 18px;
      height: 18px;
    }
    .btn-primary {
      background: #0984e3;
      color: white;
    }
    .btn-primary:hover {
      background: #0770c4;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(9, 132, 227, 0.3);
    }
    .btn-secondary {
      background: #636e72;
      color: white;
    }
    .btn-secondary:hover {
      background: #4a5356;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(99, 110, 114, 0.3);
    }
    #loading {
      text-align: center;
      padding: 60px 20px;
      color: #636e72;
      font-size: 1.1rem;
    }
    #order-form {
      display: none;
    }
    .error-message {
      color: #d63031;
      padding: 15px 20px;
      background: #ffe0e0;
      border-radius: 8px;
      margin-bottom: 20px;
      display: flex;
      align-items: center;
      gap: 10px;
    }
    .error-message svg {
      width: 20px;
      height: 20px;
      flex-shrink: 0;
    }
    .loading-spinner {
      display: inline-block;
      width: 40px;
      height: 40px;
      border: 4px solid #e6e9f0;
      border-top-color: #0984e3;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin: 0 auto 15px;
    }
    @keyframes spin {
      to { transform: rotate(360deg); }
    }
    @media (max-width: 768px) {
      .container {
        flex-direction: column;
        padding: 0 10px !important;
      }
      .content-area {
        padding: 20px;
      }
      .page-header h1 {
        font-size: 1.5rem;
      }
      .info-grid,
      .form-grid {
        grid-template-columns: 1fr;
        gap: 15px;
      }
      .button-group {
        flex-direction: column;
      }
      .btn {
        width: 100%;
        justify-content: center;
      }
    }
  </style>
</head>
<body>
  <% try { %>
    <%- include('../../partials/navbar') %>
  <% } catch (e) { %>
    <p>Error rendering navbar: <%= e.message %></p>
  <% } %>
  <div class="container">
    <% try { %>
      <%- include('../../partials/company_sidebar') %>
    <% } catch (e) { %>
      <p>Error rendering sidebar: <%= e.message %></p>
    <% } %>
    <div class="content-area">
      <div class="page-header">
        <h1>Edit Pending Order</h1>
      </div>
      <div id="loading">
        <div class="loading-spinner"></div>
        Loading order details...
      </div>
      <div id="error-container"></div>
      <form id="order-form" action="/company/orders/update/<%= oid %>" method="POST">
        <div class="section-title">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
          </svg>
          Order Information
        </div>
        <div class="info-grid">
          <div class="info-item">
            <span class="info-label">Order ID</span>
            <span class="info-value" id="order_id_display">-</span>
          </div>
          <div class="info-item">
            <span class="info-label">Branch</span>
            <span class="info-value" id="branch_name">-</span>
          </div>
          <div class="info-item">
            <span class="info-label">Product</span>
            <span class="info-value" id="product_name">-</span>
          </div>
          <div class="info-item">
            <span class="info-label">Quantity</span>
            <span class="info-value" id="quantity">-</span>
          </div>
        </div>

        <div class="section-title">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
          </svg>
          Update Details
        </div>
        <div class="form-grid">
          <div class="form-group">
            <label for="status">Status<span class="required">*</span></label>
            <select id="status" name="status" required>
              <option value="Pending">Pending</option>
              <option value="Accepted">Accepted</option>
              <option value="Rejected">Rejected</option>
            </select>
          </div>
          <div class="form-group">
            <label for="delivery_date">Delivery Date</label>
            <input type="text" id="delivery_date" name="delivery_date" placeholder="Select delivery date">
          </div>
        </div>

        <div class="button-group">
          <button type="submit" class="btn btn-primary">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
            Update Order
          </button>
          <button type="button" class="btn btn-secondary" onclick="window.location.href='/company/orders/pending'">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
            Cancel
          </button>
        </div>
      </form>
    </div>
  </div>
  <% try { %>
    <%- include('../../partials/footer') %>
  <% } catch (e) { %>
    <p>Error rendering footer: <%= e.message %></p>
  <% } %>
  <script>
    const orderId = '<%= oid %>';
    const loading = document.getElementById('loading');
    const orderForm = document.getElementById('order-form');
    const errorContainer = document.getElementById('error-container');

    async function loadOrderDetails() {
      try {
        const response = await fetch(`/company/orders/pending/data/${orderId}`);
        
        if (!response.ok) {
          throw new Error('Failed to fetch order details');
        }
        
        const order = await response.json();
        
        // Populate info display fields
        document.getElementById('order_id_display').textContent = order.order_id || '-';
        document.getElementById('branch_name').textContent = order.branch_name || '-';
        document.getElementById('product_name').textContent = order.product_name || '-';
        document.getElementById('quantity').textContent = order.quantity || '-';
        
        // Populate form fields
        document.getElementById('status').value = order.status || 'Pending';
        
        // Format and set delivery date if exists
        if (order.delivery_date) {
          const date = new Date(order.delivery_date);
          const formattedDate = date.toISOString().split('T')[0];
          document.getElementById('delivery_date').value = formattedDate;
        }
        
        // Initialize flatpickr
        flatpickr("#delivery_date", {
          dateFormat: "Y-m-d",
          minDate: "today",
          altInput: true,
          altFormat: "F j, Y"
        });
        
        // Show form, hide loading
        loading.style.display = 'none';
        orderForm.style.display = 'block';
      } catch (error) {
        console.error('Error loading order:', error);
        loading.style.display = 'none';
        errorContainer.innerHTML = `
          <div class="error-message">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <div>
              <strong>Error loading order.</strong><br>
              Please <a href="/company/orders/pending" style="color: #0984e3; text-decoration: underline;">go back</a> and try again.
            </div>
          </div>
        `;
      }
    }

    // Load order details on page load
    loadOrderDetails();
  </script>
</body>
</html>