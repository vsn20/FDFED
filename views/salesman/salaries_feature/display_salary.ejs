<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Salesman Dashboard - Salaries - ElectroLand</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      background: #f0f2f5;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      color: #1a1a1a;
    }

    .container {
      margin-top: 90px;
      display: flex;
      flex: 1;
      gap: 25px;
      padding: 0 20px;
    }

    .content-area {
      background: #ffffff;
      border-radius: 12px;
      padding: 25px;
      box-shadow: 0 6px 25px rgba(0, 0, 0, 0.06);
      flex: 1;
      overflow-x: auto;
      border: 1px solid #ebedf0;
    }

    .content-area h1 {
      color: #2c3e50;
      margin-bottom: 25px;
      font-size: 1.8rem;
      font-weight: 600;
    }

    .header-container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 25px;
      flex-wrap: wrap;
      gap: 15px;
    }

    .salary-list {
      display: flex;
      flex-direction: column;
      gap: 20px;
    }

    .salary-entry {
      background: #ffffff;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 3px 15px rgba(0, 0, 0, 0.04);
      font-size: 0.95rem;
      border-left: 4px solid #3498db;
      transition: transform 0.2s, box-shadow 0.2s;
    }

    .salary-entry:hover {
      transform: translateY(-3px);
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
    }

    .salary-entry div {
      margin-bottom: 10px;
      display: flex;
      align-items: center;
    }

    .salary-entry div:last-child {
      margin-bottom: 0;
    }

    .salary-entry span.label {
      font-weight: 600;
      min-width: 120px;
      color: #34495e;
      display: inline-block;
    }

    .date-range {
      font-size: 1.3rem;
      color: #2980b9;
      font-weight: 500;
    }

    .date-range h1 {
      font-size: inherit;
      color: inherit;
      margin: 0;
    }

    .controls {
      display: flex;
      gap: 12px;
      align-items: center;
    }

    .month-year-select {
      padding: 10px 15px;
      border: 1px solid #dfe6e9;
      border-radius: 6px;
      font-size: 0.95rem;
      background: #fff;
      cursor: pointer;
      min-width: 150px;
      transition: border-color 0.2s;
    }

    .month-year-select:hover,
    .month-year-select:focus {
      border-color: #3498db;
      outline: none;
    }

    .generate-btn {
      padding: 10px 24px;
      background: linear-gradient(135deg, #3498db, #2980b9);
      color: white;
      border: none;
      border-radius: 6px;
      font-size: 0.95rem;
      cursor: pointer;
      font-weight: 500;
      transition: transform 0.2s, box-shadow 0.2s;
    }

    .generate-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 15px rgba(52, 152, 219, 0.3);
    }

    .note {
      color: #e74c3c;
      font-style: italic;
    }

    .success-message {
      color: #2ecc71;
      font-weight: 500;
      margin-bottom: 15px;
      font-size: 1rem;
    }

    @media (max-width: 768px) {
      .container {
        flex-direction: column;
        padding: 0 10px;
      }

      .content-area {
        padding: 20px;
      }

      .content-area h1 {
        font-size: 1.5rem;
      }

      .header-container {
        flex-direction: column;
        align-items: stretch;
        gap: 15px;
      }

      .generate-btn {
        width: 100%;
        justify-content: center;
      }

      .salary-entry {
        padding: 15px;
        font-size: 0.9rem;
      }

      .date-range {
        font-size: 1.2rem;
      }

      .controls {
        flex-direction: column;
        width: 100%;
      }

      .month-year-select {
        width: 100%;
      }
    }

    @media (min-width: 769px) and (max-width: 1024px) {
      .content-area h1 {
        font-size: 1.6rem;
      }

      .salary-entry {
        font-size: 0.9rem;
        padding: 15px;
      }
    }
  </style>
</head>
<body>
  <%- include('../../partials/navbar') %>

  <div class="container">
    <%- include('../../partials/salesman_sidebar') %>
    
    <div class="content-area" id="content">
      <% if (successMessage) { %>
        <div class="success-message"><%= successMessage %></div>
      <% } %>
      <div class="header-container">
        <h1>Salary</h1>
        <div class="date-range">
          <h1 id="date-range-title"></h1>
        </div>
        <div class="controls">
          <select class="month-year-select" id="month-year"></select>
          <button class="generate-btn" onclick="refreshSalaries()">Generate</button>
        </div>
      </div>
      <div class="salary-list" id="salary-list"></div>
    </div>
  </div>

  <%- include('../../partials/footer') %>

  <script>
    async function refreshSalaries() {
      const monthYear = document.getElementById('month-year').value || '';
      console.log('[refreshSalaries] Fetching salary data for:', monthYear);
      try {
        const response = await fetch(`/salesman/salaries/data${monthYear ? '?monthYear=' + monthYear : ''}`);
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        const data = await response.json();
        if (data.error) {
          throw new Error(data.error);
        }

        const salaryList = document.getElementById('salary-list');
        const dateRangeTitle = document.getElementById('date-range-title');
        const monthYearSelect = document.getElementById('month-year');

        // Update month-year dropdown
        monthYearSelect.innerHTML = '';
        data.monthYearOptions.forEach(option => {
          const opt = document.createElement('option');
          opt.value = option;
          opt.textContent = new Date(option.replace('-', ' ')).toLocaleString('en-US', { month: 'long', year: 'numeric' });
          opt.selected = option === data.selectedMonthYear;
          monthYearSelect.appendChild(opt);
        });

        // Update date range title
        dateRangeTitle.textContent = `${data.selectedMonthYear} Salary`;

        // Update salary list
        salaryList.innerHTML = '';
        if (data.salary.length === 0) {
          salaryList.innerHTML = `
            <div class="salary-entry">
              <div>No salary data found for ${data.selectedMonthYear}.</div>
            </div>
          `;
        } else {
          data.salary.forEach(s => {
            const salaryEntry = document.createElement('div');
            salaryEntry.className = 'salary-entry';
            salaryEntry.innerHTML = `
              <div><span class="label">Employee Name:</span> ${s.employee_name}</div>
              <div><span class="label">Base Salary:</span> $${s.salary}</div>
              <div><span class="label">Commission (${data.selectedMonthYear}):</span> $${s.commission}</div>
              <div><span class="label">Total Salary:</span> $${s.totalsalary}</div>
              ${s.note ? `<div><span class="label">Note:</span> <span class="note">${s.note}</span></div>` : ''}
            `;
            salaryList.appendChild(salaryEntry);
          });
        }
      } catch (error) {
        console.error('[refreshSalaries] Error fetching salary data:', error);
        const salaryList = document.getElementById('salary-list');
        salaryList.innerHTML = `
          <div class="salary-entry">
            <div>Error loading salary data.</div>
          </div>
        `;
      }
    }

    window.addEventListener('message', (event) => {
      if (event.data.type === 'refreshSalaries') {
        console.log('[message] Received refreshSalaries');
        refreshSalaries();
      }
    });

    // Initial load
    document.addEventListener('DOMContentLoaded', () => {
      console.log('[DOMContentLoaded] Initializing salary data');
      refreshSalaries();
    });

    // Refresh on month-year change
    document.getElementById('month-year').addEventListener('change', () => {
      console.log('[month-year] Change detected');
      refreshSalaries();
    });
  </script>
</body>
</html>