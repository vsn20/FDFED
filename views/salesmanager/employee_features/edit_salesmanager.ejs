<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Sales Manager - ElectroLand</title>
  <link rel="stylesheet" href="/styles.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      background: #f5f6fa;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      color: #2d3436;
    }

    .container {
      margin-top: 90px;
      display: flex;
      flex: 1;
      gap: 25px;
      padding: 0 20px;
      max-width: 100%;
    }

    .content-area {
      background: #ffffff;
      border-radius: 15px;
      padding: 25px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      flex: 1;
      min-width: 0;
      height: calc(100vh - 90px);
      overflow-y: auto;
    }

    .content-area::-webkit-scrollbar {
      display: none;
    }

    .content-area {
      scrollbar-width: none;
      -ms-overflow-style: none;
    }

    .content-area h1 {
      text-align: center;
      margin-bottom: 20px;
      font-size: 1.8em;
      color: #2d3436;
    }

    .section {
      margin-bottom: 30px;
    }

    .section h2 {
      font-size: 1.3em;
      margin-bottom: 15px;
      color: #2d3436;
      border-bottom: 2px solid #e9ecef;
      padding-bottom: 5px;
      font-weight: 600;
    }

    .form-row {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      margin-bottom: 15px;
    }

    .form-group {
      flex: 1;
      min-width: 220px;
      position: relative;
    }

    .form-group label {
      display: block;
      margin-bottom: 8px;
      color: #495057;
      font-weight: 500;
      font-size: 0.95em;
    }

    .form-group input,
    .form-group textarea {
      width: 100%;
      padding: 10px 12px;
      border: 1px solid #ced4da;
      border-radius: 6px;
      background-color: #fff;
      font-size: 0.95em;
      transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }

    .form-group input:focus,
    .form-group textarea:focus {
      border-color: #4dabf7;
      box-shadow: 0 0 5px rgba(77, 171, 247, 0.5);
      outline: none;
    }

    .form-group input[readonly] {
      background-color: #e9ecef;
      cursor: not-allowed;
      opacity: 0.9;
    }

    .form-group textarea {
      resize: vertical;
      min-height: 100px;
    }

    .form-group .error {
      color: #dc3545;
      font-size: 0.85em;
      margin-top: 5px;
      display: none;
    }

    .submit-btn {
      background-color: #28a745;
      color: white;
      padding: 12px 30px;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-size: 1em;
      font-weight: 500;
      transition: background-color 0.3s ease, transform 0.2s ease;
      display: block;
      margin: 20px auto 0;
      width: 200px;
      text-align: center;
    }

    .submit-btn:hover {
      background-color: #218838;
      transform: translateY(-2px);
    }

    .submit-btn:disabled {
      background-color: #6c757d;
      cursor: not-allowed;
    }

    .error-message {
      color: #dc3545;
      text-align: center;
      margin-bottom: 15px;
      font-size: 0.95em;
      padding: 10px;
      background-color: #fff3f3;
      border-radius: 5px;
      display: block;
    }

    .success-message {
      background-color: #dff0d8;
      color: #3c763d;
      padding: 10px;
      margin-bottom: 15px;
      border-radius: 5px;
      text-align: center;
      display: none;
    }

    @media (max-width: 768px) {
      .container {
        flex-direction: column;
        padding: 0 10px;
      }

      .content-area {
        padding: 15px;
        width: 100%;
        height: auto;
        overflow-y: auto;
      }

      .content-area::-webkit-scrollbar {
        display: none;
      }

      .content-area {
        scrollbar-width: none;
        -ms-overflow-style: none;
      }

      .form-row {
        flex-direction: column;
        gap: 15px;
      }

      .form-group {
        min-width: 100%;
      }
    }
  </style>
</head>
<body>
  <%- include('../../partials/navbar') %>

  <div class="container">
    <%- include('../../partials/salesmanager_sidebar') %>

    <div class="content-area" id="content">
      <h1>Edit Profile</h1>
      <% if (error) { %>
        <p class="error-message"><%= error %></p>
      <% } %>
      <div id="success-message" class="success-message"></div>
      <% if (salesManager) { %>
        <div id="editForm">
          <div class="section">
            <h2>Personal Details</h2>
            <div class="form-row">
              <div class="form-group">
                <label for="f_name">First Name</label>
                <input type="text" id="f_name" name="f_name" value="<%= salesManager.f_name %>" required>
              </div>
              <div class="form-group">
                <label for="last_name">Last Name</label>
                <input type="text" id="last_name" name="last_name" value="<%= salesManager.last_name %>" required>
              </div>
              <div class="form-group">
                <label for="role">Role</label>
                <input type="text" id="role" name="role" value="<%= salesManager.role %>" readonly>
              </div>
            </div>
            <div class="form-row">
              <div class="form-group">
                <label for="bid">Branch</label>
                <input type="text" id="bid" name="bid" value="<%= salesManager.bid || 'Not Assigned' %>" readonly>
              </div>
              <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" value="<%= salesManager.email %>" required>
                <span id="emailError" class="error">Please enter a valid email address</span>
              </div>
              <div class="form-group">
                <label for="phone_no">Phone Number</label>
                <input type="text" id="phone_no" name="phone_no" value="<%= salesManager.phone_no || '' %>" pattern="[0-9]{10}" maxlength="10">
                <span id="phoneError" class="error">Phone number must be exactly 10 digits</span>
              </div>
            </div>
            <div class="form-row">
              <div class="form-group">
                <label for="address">Address</label>
                <textarea id="address" name="address"><%= salesManager.address || '' %></textarea>
              </div>
            </div>
          </div>

          <div class="section">
            <h2>Account and Salaries</h2>
            <div class="form-row">
              <div class="form-group">
                <label for="acno">Account Number</label>
                <input type="text" id="acno" name="acno" value="<%= salesManager.acno %>" required>
              </div>
              <div class="form-group">
                <label for="ifsc">IFSC Code</label>
                <input type="text" id="ifsc" name="ifsc" value="<%= salesManager.ifsc %>" required>
              </div>
              <div class="form-group">
                <label for="bankname">Bank Name</label>
                <input type="text" id="bankname" name="bankname" value="<%= salesManager.bankname %>" required>
              </div>
            </div>
            <div class="form-row">
              <div class="form-group">
                <label for="base_salary">Monthly Salary</label>
                <input type="number" id="base_salary" name="base_salary" value="<%= salesManager.base_salary %>" required min="0">
              </div>
            </div>
          </div>

          <button type="button" class="submit-btn" onclick="updateSalesManager()">Update</button>
        </div>
      <% } else { %>
        <p>Sales Manager data not available</p>
      <% } %>
    </div>
  </div>

  <%- include('../../partials/footer') %>

  <script>
    async function updateSalesManager() {
      const email = document.getElementById('email');
      const phone = document.getElementById('phone_no');
      const errorMessage = document.querySelector('.error-message') || document.createElement('p');
      errorMessage.className = 'error-message';
      const successMessage = document.getElementById('success-message');
      const form = document.getElementById('editForm');

      email.style.borderColor = '#ced4da';
      phone.style.borderColor = '#ced4da';
      errorMessage.textContent = '';
      successMessage.style.display = 'none';

      const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
      if (!emailPattern.test(email.value)) {
        email.style.borderColor = '#dc3545';
        errorMessage.textContent = 'Please enter a valid email address';
        form.insertBefore(errorMessage, form.firstChild);
        return;
      }

      const phonePattern = /^\d{10}$/;
      if (phone.value && !phonePattern.test(phone.value)) {
        phone.style.borderColor = '#dc3545';
        errorMessage.textContent = 'Phone number must be exactly 10 digits';
        form.insertBefore(errorMessage, form.firstChild);
        return;
      }

      const data = {
        f_name: document.getElementById('f_name').value,
        last_name: document.getElementById('last_name').value,
        email: email.value,
        phone_no: phone.value,
        address: document.getElementById('address').value,
        acno: document.getElementById('acno').value,
        ifsc: document.getElementById('ifsc').value,
        bankname: document.getElementById('bankname').value,
        base_salary: parseFloat(document.getElementById('base_salary').value),
      };

      if (!data.f_name || !data.last_name || !data.email || !data.acno || !data.ifsc || !data.bankname || isNaN(data.base_salary)) {
        errorMessage.textContent = 'All required fields must be filled';
        form.insertBefore(errorMessage, form.firstChild);
        return;
      }

      if (data.base_salary < 0) {
        errorMessage.textContent = 'Monthly salary cannot be negative';
        form.insertBefore(errorMessage, form.firstChild);
        return;
      }

      try {
        const response = await fetch('/salesmanager/update-salesmanager', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        });

        const result = await response.json();

        if (result.error) {
          errorMessage.textContent = result.error;
          form.insertBefore(errorMessage, form.firstChild);
        } else {
          successMessage.textContent = 'Profile updated successfully';
          successMessage.style.display = 'block';
          setTimeout(() => {
            window.location.href = '/salesmanager/employees?message=Profile updated successfully';
          }, 1000);
        }
      } catch (error) {
        errorMessage.textContent = 'Network error: ' + error.message;
        form.insertBefore(errorMessage, form.firstChild);
      }
    }

    document.getElementById('phone_no').addEventListener('input', function (e) {
      this.value = this.value.replace(/[^0-9]/g, '');
      if (this.value.length > 10) {
        this.value = this.value.slice(0, 10);
      }
    });
  </script>
</body>
</html>