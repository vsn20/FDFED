<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Sales Manager - ElectroLand</title>
  <link rel="stylesheet" href="/styles.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      background: #f5f6fa;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      color: #2d3436;
    }

    .container {
      margin-top: 90px;
      display: flex;
      flex: 1;
      gap: 25px;
      padding: 0 20px;
      max-width: 100%;
    }

    .content-area {
      background: #ffffff;
      border-radius: 15px;
      padding: 25px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      flex: 1;
      min-width: 0;
      height: calc(100vh - 90px);
      overflow-y: auto;
    }

    .content-area::-webkit-scrollbar {
      display: none;
    }

    .content-area {
      scrollbar-width: none;
      -ms-overflow-style: none;
    }

    .content-area h1 {
      text-align: center;
      margin-bottom: 20px;
      font-size: 1.8em;
      color: #2d3436;
    }

    .section {
      margin-bottom: 30px;
    }

    .section h2 {
      font-size: 1.3em;
      margin-bottom: 15px;
      color: #2d3436;
      border-bottom: 2px solid #e9ecef;
      padding-bottom: 5px;
      font-weight: 600;
    }

    .form-row {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      margin-bottom: 15px;
    }

    .form-group {
      flex: 1;
      min-width: 220px;
      position: relative;
    }

    .form-group label {
      display: block;
      margin-bottom: 8px;
      color: #495057;
      font-weight: 500;
      font-size: 0.95em;
    }

    .form-group input,
    .form-group textarea {
      width: 100%;
      padding: 10px 12px;
      border: 1px solid #ced4da;
      border-radius: 6px;
      background-color: #fff;
      font-size: 0.95em;
      transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }

    .form-group input:focus,
    .form-group textarea:focus {
      border-color: #4dabf7;
      box-shadow: 0 0 5px rgba(77, 171, 247, 0.5);
      outline: none;
    }

    .form-group input[readonly] {
      background-color: #e9ecef;
      cursor: not-allowed;
      opacity: 0.9;
    }

    .form-group textarea {
      resize: vertical;
      min-height: 100px;
    }

    .form-group .error {
      color: #dc3545;
      font-size: 0.85em;
      margin-top: 5px;
      display: none;
    }

    .form-group .error.show {
      display: block;
    }

    .submit-btn {
      background-color: #28a745;
      color: white;
      padding: 12px 30px;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-size: 1em;
      font-weight: 500;
      transition: background-color 0.3s ease, transform 0.2s ease;
      display: block;
      margin: 20px auto 0;
      width: 200px;
      text-align: center;
    }

    .submit-btn:hover {
      background-color: #218838;
      transform: translateY(-2px);
    }

    .submit-btn:disabled {
      background-color: #6c757d;
      cursor: not-allowed;
      transform: none;
    }

    .error-message {
      color: #dc3545;
      text-align: center;
      margin-bottom: 15px;
      font-size: 0.95em;
      padding: 10px;
      background-color: #fff3f3;
      border-radius: 5px;
      display: none;
    }

    .success-message {
      background-color: #dff0d8;
      color: #3c763d;
      padding: 10px;
      margin-bottom: 15px;
      border-radius: 5px;
      text-align: center;
      display: none;
    }

    #loading {
      text-align: center;
      padding: 20px;
      color: #636e72;
    }

    #editForm {
      display: none;
    }

    @media (max-width: 768px) {
      .container {
        flex-direction: column;
        padding: 0 10px;
      }

      .content-area {
        padding: 15px;
        width: 100%;
        height: auto;
        overflow-y: auto;
      }

      .content-area h1 {
        font-size: 1.5em;
      }

      .form-row {
        flex-direction: column;
        gap: 15px;
      }

      .form-group {
        min-width: 100%;
      }

      .submit-btn {
        width: 100%;
        padding: 10px;
      }
    }
  </style>
</head>
<body>
  <%- include('../../partials/navbar') %>

  <div class="container">
    <%- include('../../partials/salesmanager_sidebar') %>

    <div class="content-area" id="content">
      <h1>Edit Sales Manager Profile</h1>

      <div id="loading">Loading profile...</div>

      <form id="editForm" style="display: none;">
        <p class="error-message" id="error-message"></p>
        <p id="success-message" class="success-message"></p>

        <div class="section">
          <h2>Personal Details</h2>
          <div class="form-row">
            <div class="form-group">
              <label for="f_name">First Name</label>
              <input type="text" id="f_name" name="f_name" required>
              <span class="error" id="f_name-error">First name is required</span>
            </div>
            <div class="form-group">
              <label for="last_name">Last Name</label>
              <input type="text" id="last_name" name="last_name" required>
              <span class="error" id="last_name-error">Last name is required</span>
            </div>
          </div>
          <div class="form-row">
            <div class="form-group">
              <label for="email">Email</label>
              <input type="email" id="email" name="email" required>
              <span class="error" id="email-error">Please enter a valid email address</span>
            </div>
            <div class="form-group">
              <label for="phone_no">Phone Number</label>
              <input type="tel" id="phone_no" name="phone_no" maxlength="10">
              <span class="error" id="phone_no-error">Phone number must be 10 digits</span>
            </div>
          </div>
          <div class="form-row">
            <div class="form-group full-width">
              <label for="address">Address</label>
              <textarea id="address" name="address"></textarea>
              <span class="error" id="address-error">Address is required</span>
            </div>
          </div>
        </div>

        <div class="section">
          <h2>Bank Details</h2>
          <div class="form-row">
            <div class="form-group">
              <label for="acno">Account Number</label>
              <input type="text" id="acno" name="acno" required>
              <span class="error" id="acno-error">Valid account number is required</span>
            </div>
            <div class="form-group">
              <label for="ifsc">IFSC Code</label>
              <input type="text" id="ifsc" name="ifsc" required>
              <span class="error" id="ifsc-error">Valid IFSC code is required (e.g., SBIN0001234)</span>
            </div>
          </div>
          <div class="form-row">
            <div class="form-group">
              <label for="bankname">Bank Name</label>
              <input type="text" id="bankname" name="bankname" required>
              <span class="error" id="bankname-error">Bank name is required</span>
            </div>
          </div>
          <div class="form-row">
            <div class="form-group">
              <label for="base_salary">Monthly Salary</label>
              <input type="number" id="base_salary" name="base_salary" readonly>
            </div>
          </div>
        </div>

        <button type="button" class="submit-btn" id="submit-btn" onclick="updateSalesManager()" disabled>Update</button>
      </form>
    </div>
  </div>

  <%- include('../../partials/footer') %>

  <script>
    const form = document.getElementById('editForm');
    const loading = document.getElementById('loading');
    const errorMessage = document.getElementById('error-message');
    const successMessage = document.getElementById('success-message');
    const submitBtn = document.getElementById('submit-btn');

    const fields = {
      f_name: { errorId: 'f_name-error', validate: val => val.trim().length > 0 },
      last_name: { errorId: 'last_name-error', validate: val => val.trim().length > 0 },
      email: { errorId: 'email-error', validate: val => /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(val) },
      phone_no: { errorId: 'phone_no-error', validate: val => !val || /^\d{10}$/.test(val) },
      address: { errorId: 'address-error', validate: val => true }, // Address is optional
      acno: { errorId: 'acno-error', validate: val => /^\d{9,18}$/.test(val) },
      ifsc: { errorId: 'ifsc-error', validate: val => /^[A-Z]{4}0[A-Z0-9]{6}$/.test(val) },
      bankname: { errorId: 'bankname-error', validate: val => val.trim().length > 0 }
    };

    function validateField(fieldId) {
      const field = document.getElementById(fieldId);
      const errorElement = document.getElementById(fields[fieldId].errorId);
      const isValid = fields[fieldId].validate(field.value);
      field.style.borderColor = isValid ? '#ced4da' : '#dc3545';
      errorElement.classList.toggle('show', !isValid);
      if (!isValid) console.log(`Validation failed for ${fieldId}: ${field.value}`);
      return isValid;
    }

    function validateForm() {
      const isValid = Object.keys(fields).every(fieldId => validateField(fieldId));
      submitBtn.disabled = !isValid;
      if (!isValid) console.log('Form validation failed');
      return isValid;
    }

    Object.keys(fields).forEach(fieldId => {
      const field = document.getElementById(fieldId);
      field.addEventListener('input', () => {
        validateField(fieldId);
        validateForm();
      });
    });

    async function loadSalesManager() {
      try {
        const response = await fetch('/salesmanager/self/data');
        if (!response.ok) throw new Error('Failed to fetch sales manager');
        const salesManager = await response.json();

        document.getElementById('f_name').value = salesManager.f_name || '';
        document.getElementById('last_name').value = salesManager.last_name || '';
        document.getElementById('email').value = salesManager.email || '';
        document.getElementById('phone_no').value = salesManager.phone_no || '';
        document.getElementById('address').value = salesManager.address || '';
        document.getElementById('acno').value = salesManager.acno || '';
        document.getElementById('ifsc').value = salesManager.ifsc || '';
        document.getElementById('bankname').value = salesManager.bankname || '';
        document.getElementById('base_salary').value = salesManager.base_salary || '';

        loading.style.display = 'none';
        form.style.display = 'block';
        validateForm(); // Validate after loading data
      } catch (error) {
        console.error('Error loading sales manager:', error);
        loading.textContent = 'Error loading profile. Please refresh.';
      }
    }

    async function updateSalesManager() {
      errorMessage.textContent = '';
      errorMessage.style.display = 'none';
      successMessage.style.display = 'none';

      if (!validateForm()) {
        errorMessage.textContent = 'Please correct the errors in the form';
        errorMessage.style.display = 'block';
        return;
      }

      const data = {
        f_name: document.getElementById('f_name').value,
        last_name: document.getElementById('last_name').value,
        email: document.getElementById('email').value,
        phone_no: document.getElementById('phone_no').value,
        address: document.getElementById('address').value,
        acno: document.getElementById('acno').value,
        ifsc: document.getElementById('ifsc').value,
        bankname: document.getElementById('bankname').value,
      };

      try {
        const response = await fetch('/salesmanager/update-salesmanager', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        });

        const result = await response.json();

        if (result.error) {
          errorMessage.textContent = result.error;
          errorMessage.style.display = 'block';
        } else {
          successMessage.textContent = 'Profile updated successfully';
          successMessage.style.display = 'block';
          setTimeout(() => {
            window.location.href = '/salesmanager/employees?message=Profile updated successfully';
          }, 1000);
        }
      } catch (error) {
        errorMessage.textContent = 'Network error: ' + error.message;
        errorMessage.style.display = 'block';
      }
    }

    document.getElementById('phone_no').addEventListener('input', function (e) {
      this.value = this.value.replace(/[^0-9]/g, '');
      if (this.value.length > 10) {
        this.value = this.value.slice(0, 10);
      }
    });

    document.getElementById('acno').addEventListener('input', function (e) {
      this.value = this.value.replace(/[^0-9]/g, '');
    });

    document.getElementById('ifsc').addEventListener('input', function (e) {
      this.value = this.value.toUpperCase().replace(/[^A-Z0-9]/g, '');
      if (this.value.length > 11) {
        this.value = this.value.slice(0, 11);
      }
    });

    // Initial load
    loadSalesManager();
  </script>
</body>
</html>