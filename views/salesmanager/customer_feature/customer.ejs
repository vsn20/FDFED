<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Customers - ElectroLand</title>
  <style>
    /* Structural CSS */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      background: #f5f6fa;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }

    .container {
      margin-top: 90px;
      display: flex;
      flex: 1;
      gap: 25px;
      padding: 0 20px !important;
      max-width: 100%;
    }

    .content-area {
      background: #ffffff;
      border-radius: 15px;
      padding: 20px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
      flex: 1;
      overflow-x: auto;
    }

    .content-area h1 {
      color: #2d3436;
      margin-bottom: 20px;
      font-size: 1.5rem;
    }

    .header-container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      flex-wrap: wrap;
    }

    .add-btn {
      display: inline-block;
      padding: 10px 20px;
      background-color: #333333;
      color: white;
      border: none;
      border-radius: 5px;
      font-size: 0.9rem;
      cursor: pointer;
      transition: background-color 0.3s;
      text-decoration: none;
    }

    .add-btn:hover {
      background-color: #555555;
    }

    .form-row {
      display: flex;
      gap: 15px;
      flex-wrap: wrap;
      margin-bottom: 20px;
    }

    .form-group {
      flex: 1 1 45%;
      min-width: 200px;
      max-width: 400px;
    }

    .form-group label {
      display: block;
      margin-bottom: 5px;
      color: #2d3436;
      font-weight: 500;
      font-size: 0.9rem;
    }

    .form-group input {
      width: 100%;
      padding: 8px;
      border: 1px solid #e6e9f0;
      border-radius: 5px;
      font-size: 0.9rem;
      background: #f8f9fa;
      color: #2d3436;
      transition: border-color 0.3s;
    }

    .form-group input:focus {
      border-color: #333333;
      outline: none;
    }

    .search-group {
      flex: 1 1 100%;
      max-width: 300px;
    }

    .table-wrapper {
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
      -ms-overflow-style: none;
      scrollbar-width: none;
    }

    .table-wrapper::-webkit-scrollbar {
      display: none;
    }

    table {
      width: 100%;
      min-width: 600px;
      border-collapse: collapse;
      background: #ffffff;
      border-radius: 10px;
      border-spacing: 0;
    }

    thead {
      background: #333333;
    }

    th {
      color: white;
      padding: 12px;
      text-align: left;
      font-size: 0.9rem;
      border-bottom: 2px solid #ffffff;
    }

    td {
      padding: 12px;
      text-align: left;
      font-size: 0.9rem;
      border-bottom: 1px solid #e6e9f0;
    }

    tr:last-child td {
      border-bottom: none;
    }

    tr:nth-child(even) {
      background: #f8f9fd;
    }

    .no-data {
      color: #888;
      font-style: italic;
      font-size: 0.9rem;
      margin-top: 20px;
      text-align: center;
    }

    #loading {
      text-align: center;
      padding: 20px;
      color: #636e72;
    }

    @media (max-width: 768px) {
      .container {
        flex-direction: column;
        padding: 0 10px !important;
      }

      .content-area {
        padding: 15px;
      }

      .content-area h1 {
        font-size: 1.2rem;
      }

      .header-container {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
      }

      .add-btn {
        margin-top: 5px;
        width: 100%;
        text-align: center;
        padding: 8px;
        font-size: 0.85rem;
      }

      .form-row {
        flex-direction: column;
      }

      .form-group {
        flex: 1 1 100%;
      }

      .search-group {
        max-width: 100%;
      }

      table {
        display: block;
        min-width: 0;
      }

      thead {
        display: none;
      }

      tr {
        display: flex;
        flex-direction: column;
        margin-bottom: 15px;
        border: 1px solid #e6e9f0;
        border-radius: 5px;
        padding: 10px;
        background: #fff;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      }

      td {
        display: flex;
        justify-content: space-between;
        padding: 8px 0;
        font-size: 0.85rem;
        border-bottom: 1px dashed #e6e9f0;
      }

      td:last-child {
        border-bottom: none;
      }

      td:before {
        content: attr(data-label);
        font-weight: bold;
        color: #2d3436;
        margin-right: 10px;
        min-width: 100px;
      }
    }

    @media (min-width: 769px) and (max-width: 1024px) {
      .content-area h1 {
        font-size: 1.3rem;
      }

      .form-group {
        flex: 1 1 45%;
      }

      .search-group {
        max-width: 250px;
      }

      th, td {
        padding: 10px;
        font-size: 0.85rem;
      }
    }
  </style>
</head>
<body>
  <%- include('../../partials/navbar') %>

  <div class="container">
    <%- include('../../partials/salesmanager_sidebar') %>

    <!-- Content Area -->
    <div class="content-area" id="content">
      <div class="header-container">
        <h1>Our Customers</h1>
        <!-- Add button can be added later if needed -->
      </div>

      <div class="form-row">
        <div class="form-group search-group">
          <label for="searchCustomer">Search by Phone Number</label>
          <input type="text" id="searchCustomer" placeholder="Enter Phone Number (e.g., +123)" oninput="filterCustomers()">
        </div>
      </div>

      <div id="loading">Loading customers...</div>

      <div class="table-wrapper" id="table-container" style="display: none;">
        <table id="customers-table">
          <thead>
            <tr>
              <th>Customer ID</th>
              <th>First Name</th>
              <th>Last Name</th>
              <th>Phone Number</th>
              <th>Profit</th>
            </tr>
          </thead>
          <tbody id="customers-tbody">
            <!-- Data populated via JS -->
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <%- include('../../partials/footer') %>

  <script>
    const tbody = document.getElementById('customers-tbody');
    const loading = document.getElementById('loading');
    const tableContainer = document.getElementById('table-container');

    async function loadCustomers() {
      try {
        const response = await fetch('/salesmanager/customers/data');
        if (!response.ok) throw new Error('Failed to fetch customer data');
        const customers = await response.json();
        
        tbody.innerHTML = ''; // Clear existing rows
        if (customers.length === 0) {
          tbody.innerHTML = '<tr><td colspan="5" class="no-data">No customer data available.</td></tr>';
        } else {
          customers.forEach(customer => {
            const row = document.createElement('tr');
            row.innerHTML = `
              <td data-label="Customer ID">${customer.cid}</td>
              <td data-label="First Name">${customer.customer_first_name}</td>
              <td data-label="Last Name">${customer.customer_last_name}</td>
              <td data-label="Phone Number">${customer.customer_ph_no}</td>
              <td data-label="Profit">${customer.profit_from_customer}</td>
            `;
            tbody.appendChild(row);
          });
        }
        loading.style.display = 'none';
        tableContainer.style.display = 'block';
        filterCustomers(); // Apply filter after loading data
      } catch (error) {
        console.error('Error loading customers:', error);
        loading.textContent = 'Error loading customers. Please refresh.';
      }
    }

    function filterCustomers() {
      const searchInput = document.getElementById('searchCustomer').value.toLowerCase();
      const rows = tbody.getElementsByTagName('tr');

      for (let row of rows) {
        const phoneNumber = row.cells[3].textContent.toLowerCase();
        if (row.cells[0].classList.contains('no-data')) {
          row.style.display = searchInput === '' ? '' : 'none';
        } else if (searchInput === '' || phoneNumber.startsWith(searchInput)) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      }
    }

    // Initial load
    loadCustomers();

    // Listen for messages to refresh customer data
    window.addEventListener('message', async (event) => {
      if (event.origin !== window.location.origin) return; // Security check
      if (event.data.type === 'refreshCustomers') {
        loadCustomers();
      }
    });
  </script>
</body>
</html>