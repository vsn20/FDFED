<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>SalesManager Dashboard - ElectroLand</title>
  <style>
    /* Reset and Base Styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      background: #e9ecef;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      color: #343a40;
    }

    /* Container */
    .container {
      margin-top: 90px;
      display: flex;
      flex: 1;
      gap: 25px;
      padding: 0 20px;
    }

    /* Content Area */
    .content-area {
      background: #ffffff;
      border-radius: 12px;
      padding: 20px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
      flex: 1;
      transition: transform 0.2s ease;
    }

    .content-area:hover {
      transform: translateY(-2px);
    }

    .content-area h1 {
      color: #1a3c6d;
      font-size: 1.5rem;
      font-weight: 600;
      margin-bottom: 20px;
    }

    .content-area p {
      color: #495057;
      line-height: 1.6;
      font-size: 0.9rem;
      margin-bottom: 20px;
    }

    /* Profit Section */
    .profit-section {
      margin-top: 20px;
    }

    .profit-section h2 {
      color: #1a3c6d;
      font-size: 1.2rem;
      font-weight: 500;
      margin-bottom: 15px;
    }

    /* Profit Cards */
    .profit-cards {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 15px;
      margin-bottom: 20px;
    }

    .profit-card {
      background: #f8f9fa;
      border-radius: 8px;
      padding: 15px;
      text-align: center;
      box-shadow: 0 3px 8px rgba(0, 0, 0, 0.05);
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .profit-card:hover {
      transform: translateY(-3px);
      box-shadow: 0 5px 12px rgba(0, 0, 0, 0.1);
    }

    .profit-card h3 {
      color: #495057;
      font-size: 0.95rem;
      font-weight: 500;
      margin-bottom: 8px;
    }

    .profit-card p {
      color: #28a745;
      font-size: 1.2rem;
      font-weight: 600;
      margin: 0;
    }

    .profit-card p.na {
      color: #dc3545;
      font-size: 1rem;
    }

    /* Full Width Card (Profit by Month) */
    .profit-card--full {
      grid-column: 1 / -1;
    }

    /* Month Selector */
    .month-selector-wrapper {
      display: flex;
      flex-direction: column;
      gap: 8px;
      width: 100%;
    }

    .profit-card select {
      padding: 10px;
      font-size: 0.9rem;
      border-radius: 5px;
      border: 1px solid #ced4da;
      background: #ffffff;
      color: #343a40;
      cursor: pointer;
      transition: border-color 0.2s ease;
      width: 100%;
    }

    .profit-card select:focus {
      outline: none;
      border-color: #1a3c6d;
      box-shadow: 0 0 0 2px rgba(26, 60, 109, 0.2);
    }

    .profit-card #selected-month-profit {
      font-size: 1.2rem;
      font-weight: 600;
      color: #28a745;
      min-height: 35px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .profit-card #selected-month-profit.na {
      color: #dc3545;
      font-size: 1rem;
      font-weight: 500;
    }

    /* Loading and Error States */
    .loading {
      color: #636e72;
      font-size: 1rem;
      text-align: center;
      margin: 20px 0;
    }

    .error {
      color: #dc3545;
      font-size: 1rem;
      text-align: center;
      margin: 20px 0;
    }

    /* Responsive Adjustments */
    @media (max-width: 768px) {
      .container {
        flex-direction: column;
        padding: 0 10px;
      }

      .content-area {
        padding: 15px;
      }

      .content-area h1 {
        font-size: 1.2rem;
      }

      .content-area p {
        font-size: 0.85rem;
      }

      .profit-section h2 {
        font-size: 1rem;
      }

      .profit-cards {
        grid-template-columns: 1fr;
      }

      .profit-card--full {
        grid-column: 1 / -1;
      }
    }

    @media (min-width: 769px) and (max-width: 1024px) {
      .content-area h1 {
        font-size: 1.3rem;
      }

      .content-area p {
        font-size: 0.85rem;
      }

      .profit-section h2 {
        font-size: 1.1rem;
      }

      .profit-cards {
        grid-template-columns: 1fr 1fr;
      }

      .profit-card--full {
        grid-column: 1 / -1;
      }
    }
  </style>
</head>
<body>
  <%- include('../partials/navbar') %>

  <div class="container">
    <%- include('../partials/salesmanager_sidebar') %>

    <!-- Content Area -->
    <div class="content-area" id="content">
      <h1>SalesManager Dashboard</h1>
      <p id="welcome-message">Loading branch information...</p>
      <p class="loading" id="loading">Loading profit data...</p>
      <p class="error" id="error" style="display: none;">Failed to load dashboard data. Please try again later.</p>

      <div class="profit-section" id="profit-section" style="display: none;">
        <h2>Profit Overview</h2>
        <div class="profit-cards">
          <div class="profit-card">
            <h3 id="cumulative-profit-title">Cumulative Profit</h3>
            <p id="cumulative-profit" class="na">N/A</p>
          </div>
          <div class="profit-card">
            <h3 id="previous-month-title">Previous Month Profit</h3>
            <p id="previous-month-profit" class="na">N/A</p>
          </div>
          <div class="profit-card profit-card--full">
            <h3>Profit by Month</h3>
            <div class="month-selector-wrapper">
              <select id="month-selector">
                <option value="">Select a month</option>
                <!-- Months will be populated dynamically -->
              </select>
              <div id="selected-month-profit" class="na">Select a month to view profit</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <%- include('../partials/footer') %>

  <script>
    // Function to initialize the dashboard with fetched data
    function initializeDashboard(data) {
      const welcomeMessage = document.getElementById('welcome-message');
      const profitSection = document.getElementById('profit-section');
      const loading = document.getElementById('loading');
      const error = document.getElementById('error');
      const cumulativeProfit = document.getElementById('cumulative-profit');
      const previousMonthProfit = document.getElementById('previous-month-profit');
      const cumulativeProfitTitle = document.getElementById('cumulative-profit-title');
      const previousMonthTitle = document.getElementById('previous-month-title');
      const monthSelector = document.getElementById('month-selector');

      // Hide loading, show profit section
      loading.style.display = 'none';
      profitSection.style.display = 'block';

      // Update welcome message with branch name
      welcomeMessage.textContent = `Welcome to the ElectroLand SalesManager Dashboard for ${data.branch_name || 'N/A'}. Use the sidebar to navigate to different management sections.`;

      // Update profit cards
      if (data.cumulativeProfit) {
        cumulativeProfit.textContent = `$${data.cumulativeProfit}`;
        cumulativeProfit.className = '';
        cumulativeProfitTitle.textContent = `Cumulative Profit (Up to ${data.previousMonthName} ${new Date().getUTCFullYear()})`;
      } else {
        cumulativeProfit.textContent = 'N/A';
        cumulativeProfit.className = 'na';
        cumulativeProfitTitle.textContent = 'Cumulative Profit';
      }

      if (data.previousMonthProfit) {
        previousMonthProfit.textContent = `$${data.previousMonthProfit}`;
        previousMonthProfit.className = '';
        previousMonthTitle.textContent = `${data.previousMonthName} Profit`;
      } else {
        previousMonthProfit.textContent = 'N/A';
        previousMonthProfit.className = 'na';
        previousMonthTitle.textContent = 'Previous Month Profit';
      }

      // Populate month selector
      monthSelector.innerHTML = '<option value="">Select a month</option>';
      data.months.forEach(month => {
        const option = document.createElement('option');
        option.value = `${month.year}-${month.month}`;
        option.textContent = month.name;
        monthSelector.appendChild(option);
      });
    }

    // Fetch dashboard data
    fetch('/salesmanager/home/data')
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        if (data.error) {
          throw new Error(data.error);
        }
        initializeDashboard(data);
      })
      .catch(error => {
        console.error('Error fetching dashboard data:', error);
        document.getElementById('loading').style.display = 'none';
        document.getElementById('error').style.display = 'block';
        document.getElementById('profit-section').style.display = 'none';
      });

    // Month selector change handler (unchanged from original)
    document.getElementById('month-selector').addEventListener('change', async (event) => {
      const month = event.target.value;
      const profitDisplay = document.getElementById('selected-month-profit');

      if (!month) {
        profitDisplay.textContent = 'Select a month to view profit';
        profitDisplay.className = 'na';
        return;
      }

      try {
        const response = await fetch(`/salesmanager/profit-by-month?month=${month}`);
        const data = await response.json();

        if (data.error) {
          profitDisplay.textContent = `Error: ${data.error}`;
          profitDisplay.className = 'na';
        } else {
          profitDisplay.textContent = `$${data.profit}`;
          profitDisplay.className = '';
        }
      } catch (error) {
        profitDisplay.textContent = 'Error fetching profit data';
        profitDisplay.className = 'na';
        console.error('Error:', error);
      }
    });
  </script>
</body>
</html>