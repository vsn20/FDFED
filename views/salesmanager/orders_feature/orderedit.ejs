<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Order - ElectroLand</title>
  <link rel="stylesheet" href="/styles.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      background: #f5f6fa;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }

    .container {
      margin-top: 90px;
      display: flex;
      flex: 1;
      gap: 25px;
      padding: 0 20px;
    }

    .content-area {
      background: #ffffff;
      border-radius: 15px;
      padding: 25px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
      flex: 1;
    }

    .content-area h2 {
      color: #2d3436;
      margin-bottom: 20px;
    }

    input[readonly], select[readonly], textarea[readonly] {
      background-color: #e9ecef;
      cursor: not-allowed;
    }

    #error-message {
      color: #e74c3c;
      margin: 10px 0;
      min-height: 20px;
    }

    .field-group {
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
    }

    .field-group > div {
      flex: 1 1 45%;
      min-width: 200px;
    }

    label {
      display: block;
      margin-bottom: 5px;
      color: #2d3436;
      font-weight: 500;
    }

    input, select {
      width: 100%;
      padding: 8px;
      border: 1px solid #e6e9f0;
      border-radius: 5px;
      font-size: 0.9rem;
      background: #f8f9fa;
      color: #2d3436;
    }

    button {
      padding: 10px 20px;
      background-color: #333333;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin-top: 20px;
    }

    button:hover {
      background-color: #555555;
    }

    #loading {
      text-align: center;
      padding: 20px;
      color: #636e72;
    }

    #order-form {
      display: none;
    }

    @media (max-width: 768px) {
      .container {
        flex-direction: column;
        padding: 0 10px;
      }

      .field-group > div {
        flex: 1 1 100%;
      }
    }
  </style>
</head>
<body>
  <%- include('../../partials/navbar') %>

  <div class="container">
    <%- include('../../partials/salesmanager_sidebar') %>

    <div class="content-area" id="content">
      <div class="form-container">
        <h2>Edit Order</h2>
        <div id="loading">Loading order...</div>
        <form id="order-form">
          <fieldset>
            <legend>Order Information</legend>
            <div class="field-group">
              <div>
                <label for="order_id">Order ID</label>
                <input type="text" id="order_id" name="order_id" readonly>
              </div>
              <div>
                <label for="branch_name">Branch</label>
                <input type="text" id="branch_name" name="branch_name" readonly>
              </div>
              <div>
                <label for="company_name">Company</label>
                <input type="text" id="company_name" name="company_name" readonly>
              </div>
              <div>
                <label for="product_name">Product</label>
                <input type="text" id="product_name" name="product_name" readonly>
              </div>
              <div>
                <label for="status">Status</label>
                <select id="status" name="status" required>
                  <option value="">Select status</option>
                  <option value="pending">Pending</option>
                  <option value="cancelled">Cancelled</option>
                  <option value="shipped">Shipped</option>
                  <option value="delivered">Delivered</option>
                </select>
              </div>
              <div>
                <label for="quantity">Quantity</label>
                <input type="number" id="quantity" name="quantity" readonly>
              </div>
              <div>
                <label for="ordered_date">Ordered Date</label>
                <input type="text" id="ordered_date" name="ordered_date" readonly>
              </div>
              <div>
                <label for="expected_delivery_date">Expected Delivery Date</label>
                <input type="text" id="expected_delivery_date" name="expected_delivery_date" readonly>
              </div>
            </div>
          </fieldset>
          <div id="error-message"></div>
          <button type="submit">Update</button>
        </form>
      </div>
    </div>
  </div>

  <%- include('../../partials/footer') %>

  <script>
    const form = document.getElementById('order-form');
    const errorMessage = document.getElementById('error-message');
    const loading = document.getElementById('loading');

    async function loadOrder() {
      try {
        const response = await fetch(`/salesmanager/orders/data/<%= order_id %>`);
        if (!response.ok) throw new Error('Failed to fetch order');
        const order = await response.json();
        document.getElementById('order_id').value = order.order_id;
        document.getElementById('branch_name').value = order.branch_name;
        document.getElementById('company_name').value = order.company_name;
        document.getElementById('product_name').value = order.product_name;
        document.getElementById('quantity').value = order.quantity;
        document.getElementById('ordered_date').value = new Date(order.ordered_date).toLocaleDateString();
        document.getElementById('expected_delivery_date').value = ['shipped', 'accepted'].includes(order.status) ? order.expected_delivery_date ? new Date(order.expected_delivery_date).toLocaleDateString() : 'N/A' : 'N/A';
        document.getElementById('status').value = order.status.toLowerCase();
        loading.style.display = 'none';
        form.style.display = 'block';
      } catch (error) {
        console.error('Error loading order:', error);
        loading.textContent = 'Error loading order. Please refresh.';
      }
    }

    form.addEventListener('submit', async function(event) {
      event.preventDefault();

      errorMessage.textContent = '';

      const formData = new FormData(form);
      const data = Object.fromEntries(formData);
      console.log('Form Data:', data);

      try {
        const response = await fetch(`/salesmanager/orders/update/<%= order_id %>`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        });

        const result = await response.json();

        if (result.success) {
          window.location.href = result.redirect;
          // Broadcast message to refresh orders
          window.postMessage({ type: 'refreshOrders' }, window.location.origin);
        } else {
          errorMessage.textContent = result.message || 'An error occurred while updating the order.';
        }
      } catch (error) {
        errorMessage.textContent = 'Network error: ' + error.message;
      }
    });

    // Initial load
    loadOrder();
  </script>
</body>
</html>