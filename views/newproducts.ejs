<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>New Products - ElectroLand</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      background: linear-gradient(135deg, #f5f6fa 0%, #e0e7ff 100%);
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }

    .container {
      margin-top: 90px;
      display: flex;
      flex: 1;
      gap: 25px;
      padding: 0 40px !important;
      max-width: 100%;
    }

    .content-area {
      background: #ffffff;
      border-radius: 15px;
      padding: 25px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
      flex: 1;
      height: calc(100vh - 90px);
      overflow-y: auto;
    }

    .content-area::-webkit-scrollbar {
      display: none;
    }

    .content-area {
      scrollbar-width: none;
      -ms-overflow-style: none;
    }

    .content-area h1 {
      color: #2d3436;
      margin-bottom: 30px;
      font-size: 2rem;
      font-weight: 600;
      text-align: center;
      position: relative;
      display: inline-block;
    }

    .content-area h1::after {
      content: '';
      position: absolute;
      bottom: -8px;
      left: 50%;
      transform: translateX(-50%);
      width: 50%;
      height: 4px;
      background: linear-gradient(to right, #34d399, #10b981);
      border-radius: 2px;
    }

    .error-message {
      color: #e63946;
      text-align: center;
      margin-bottom: 20px;
      font-weight: bold;
      font-size: 1.1rem;
    }

    .products-container {
      display: grid;
      grid-template-columns: repeat(auto-fit, 300px);
      justify-content: center;
      gap: 25px;
      padding: 10px;
    }

    .product-item {
      background: #ffffff;
      border-radius: 12px;
      box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
      padding: 20px;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .product-item:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    }

    .product-item::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 5px;
      background: linear-gradient(to right, #34d399, #10b981);
      transition: height 0.3s ease;
    }

    .product-item:hover::before {
      height: 10px;
    }

    .slideshow-container {
      position: relative;
      width: 100%;
      margin: 0 auto 15px auto;
      border-radius: 8px;
      overflow: hidden;
    }

    .slides {
      display: none;
      width: 100%;
      height: 200px;
      object-fit: cover;
      border-radius: 8px;
      transition: opacity 0.5s ease-in-out;
    }

    .slides.active {
      display: block;
      opacity: 1;
    }

    .product-details {
      display: flex;
      flex-direction: column;
      gap: 10px;
      font-size: 0.95rem;
      color: #4a5568;
      text-align: left;
    }

    .product-details p {
      margin: 0;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .product-details p span {
      font-weight: 500;
      color: #2d3436;
    }

    .product-details p::before {
      font-size: 1.1rem;
    }

    .product-details p:nth-child(1)::before {
      content: 'üÜî';
    }

    .product-details p:nth-child(2)::before {
      content: 'üìè';
    }

    .product-details p:nth-child(3)::before {
      content: 'üè¢';
    }

    .loading {
      text-align: center;
      padding: 40px;
      color: #666;
    }

    @media (max-width: 768px) {
      .container {
        flex-direction: column;
        padding: 0 20px !important;
      }

      .content-area {
        padding: 15px;
        height: auto;
      }

      .content-area h1 {
        font-size: 1.5rem;
      }

      .products-container {
        grid-template-columns: 1fr;
      }

      .product-item {
        padding: 15px;
      }

      .slides {
        height: 150px;
      }

      .product-details {
        font-size: 0.9rem;
      }
    }

    @media (min-width: 769px) and (max-width: 1024px) {
      .content-area h1 {
        font-size: 1.8rem;
      }

      .products-container {
        grid-template-columns: repeat(auto-fit, 250px);
        justify-content: center;
      }

      .slides {
        height: 180px;
      }

      .product-details {
        font-size: 0.92rem;
      }
    }
  </style>
</head>
<body>
  <%- include('./partials/navbar') %>

  <div class="container">
    <div class="content-area" id="content">
      <h1>New Products</h1>
      
      <div class="loading" id="loading">Loading new products...</div>
      
      <div class="products-container" id="products-container">
      </div>
    </div>
  </div>

  <%- include('./partials/footer') %>

  <script>
    async function loadProducts() {
      try {
        const response = await fetch('/newproducts/data');
        if (!response.ok) {
          throw new Error('Failed to fetch products');
        }
        const { newproductData, error } = await response.json();
        const container = document.getElementById('products-container');
        const loading = document.getElementById('loading');
        
        // Hide loading
        loading.style.display = 'none';

        if (error) {
          const p = document.createElement('p');
          p.className = 'error-message';
          p.textContent = error;
          container.parentNode.insertBefore(p, container);
          return;
        }

        newproductData.forEach(product => {
          const div = document.createElement('div');
          div.className = 'product-item';

          let slidesHTML = '';
          product.prod_photos.forEach((photo, index) => {
            slidesHTML += `<img src="${photo}" alt="Product Photo" class="slides ${index === 0 ? 'active' : ''}">`;
          });

          div.innerHTML = `
            <div class="slideshow-container">
              ${slidesHTML}
            </div>
            <div class="product-details">
              <p><span>Product ID:</span> ${product.prod_id}</p>
              <p><span>Model Number:</span> ${product.Model_no}</p>
              <p><span>Company Name:</span> ${product.com_name}</p>
            </div>
          `;
          container.appendChild(div);
        });

        // Initialize slideshows
        initializeSlideshows();
      } catch (err) {
        console.error('Error loading products:', err);
        const container = document.getElementById('products-container');
        const loading = document.getElementById('loading');
        loading.style.display = 'none';
        
        const p = document.createElement('p');
        p.className = 'error-message';
        p.textContent = 'Failed to load products';
        container.parentNode.insertBefore(p, container);
      }
    }

    function initializeSlideshows() {
      document.querySelectorAll('.slideshow-container').forEach(container => {
        const slides = container.querySelectorAll('.slides');
        let currentSlide = 0;
        
        function showNextSlide() {
          if (slides.length <= 1) return; // Don't animate if only one slide
          
          slides[currentSlide].classList.remove('active');
          currentSlide = (currentSlide + 1) % slides.length;
          slides[currentSlide].classList.add('active');
        }
        
        if (slides.length > 0) {
          slides[0].classList.add('active');
          if (slides.length > 1) {
            setInterval(showNextSlide, 2000);
          }
        }
      });
    }

    window.addEventListener('load', loadProducts);
  </script>
</body>
</html>