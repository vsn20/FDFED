<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Company - ElectroLand</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        body {
            background: #f5f6fa;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }
        .container {
            margin-top: 90px;
            display: flex;
            flex: 1;
            gap: 25px;
            padding: 0 20px;
        }
        .content-area {
            background: #ffffff;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            flex: 1;
            overflow-x: auto;
        }
        .form-container {
            max-width: 600px;
            margin: 0 auto;
        }
        .content-area h1 {
            color: #2d3436;
            margin-bottom: 20px;
            font-size: 1.5rem;
            text-align: center;
        }
        fieldset {
            border: 1px solid #e6e9f0;
            border-radius: 5px;
            padding: 15px;
            margin-bottom: 20px;
        }
        legend {
            color: #2d3436;
            font-weight: bold;
            padding: 0 10px;
        }
        .field-group {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
        }
        .field-group > div {
            flex: 1 1 45%;
            min-width: 200px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            color: #2d3436;
            font-weight: 500;
        }
        input[type="text"],
        input[type="email"],
        input[type="tel"],
        textarea {
            width: 100%;
            padding: 8px;
            border: 1px solid #e6e9f0;
            border-radius: 5px;
            font-size: 0.9rem;
            background: #fff;
            transition: border-color 0.3s;
        }
        textarea {
            height: 100px;
            resize: vertical;
        }
        input:focus,
        textarea:focus {
            border-color: #333333;
            outline: none;
        }
        button[type="submit"] {
            display: inline-block;
            padding: 10px 20px;
            background-color: #333333;
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 0.9rem;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        button[type="submit"]:hover:not(:disabled) {
            background-color: #555555;
        }
        button[type="submit"]:disabled {
            background-color: #bdc3c7;
            cursor: not-allowed;
        }
        #error-message {
            color: #e74c3c;
            font-size: 0.85rem;
            margin: 10px 0;
            text-align: center;
        }
        #success-message {
            color: #27ae60;
            font-size: 0.85rem;
            margin: 10px 0;
            text-align: center;
        }
        .error {
            border-color: #e74c3c !important;
            background-color: #ffe6e6 !important;
        }
        .error-message {
            color: #e74c3c;
            font-size: 0.8rem;
            margin-top: 5px;
            display: none;
        }
        @media (max-width: 768px) {
            .container {
                flex-direction: column;
                padding: 0 10px;
            }
            .content-area {
                padding: 15px;
            }
            .content-area h1 {
                font-size: 1.2rem;
            }
            .field-group > div {
                flex: 1 1 100%;
            }
            button[type="submit"] {
                width: 100%;
                padding: 8px;
                font-size: 0.85rem;
            }
        }
        @media (min-width: 769px) and (max-width: 1024px) {
            .content-area h1 {
                font-size: 1.3rem;
            }
            .field-group > div {
                flex: 1 1 45%;
            }
        }
    </style>
</head>
<body>
    <%- include('../../partials/navbar') %>

    <div class="container">
        <%- include('../../partials/admin_sidebar') %>

        <div class="content-area form-container" id="content">
            <h1>Add Company</h1>
            <form id="company-details-form">
                <fieldset>
                    <legend>Company Information</legend>
                    <div class="field-group">
                        <div>
                            <label for="company-name">Company Name</label>
                            <input type="text" id="company-name" name="cname" required placeholder="Enter company name">
                            <div class="error-message" id="company-name-error"></div>
                        </div>
                        <div>
                            <label for="email">Email</label>
                            <input type="email" id="email" name="email" required placeholder="Enter company email">
                            <div class="error-message" id="email-error"></div>
                        </div>
                        <div>
                            <label for="phone">Phone</label>
                            <input type="tel" id="phone" name="phone" required placeholder="Enter company phone">
                            <div class="error-message" id="phone-error"></div>
                        </div>
                        <div>
                            <label for="address">Address</label>
                            <textarea id="address" name="address" required placeholder="Enter company address"></textarea>
                            <div class="error-message" id="address-error"></div>
                        </div>
                    </div>
                </fieldset>
                <div id="error-message"></div>
                <div id="success-message"></div>
                <button type="submit">Submit Company</button>
            </form>
        </div>
    </div>

    <%- include('../../partials/footer') %>

    <script>
        const form = document.getElementById('company-details-form');
        const errorMessage = document.getElementById('error-message');
        const successMessage = document.getElementById('success-message');
        const submitBtn = form.querySelector('button[type="submit"]');

        // DOM elements for validation
        const companyNameInput = document.getElementById('company-name');
        const emailInput = document.getElementById('email');
        const phoneInput = document.getElementById('phone');
        const addressInput = document.getElementById('address');

        const companyNameError = document.getElementById('company-name-error');
        const emailError = document.getElementById('email-error');
        const phoneError = document.getElementById('phone-error');
        const addressError = document.getElementById('address-error');

        // Validation functions
        function validateCompanyName(name) {
            if (!name) {
                return 'Company name is required.';
            }
            if (name.length < 2) {
                return 'Company name must be at least 2 characters long.';
            }
            return '';
        }

        function validateEmail(email) {
            if (!email) {
                return 'Email is required.';
            }
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                return 'Please enter a valid email address.';
            }
            return '';
        }

        function validatePhone(phone) {
            if (!phone) {
                return 'Phone is required.';
            }
            const phoneRegex = /^\d{10}$/; // Assuming 10-digit phone
            if (!phoneRegex.test(phone.replace(/\D/g, ''))) {
                return 'Please enter a valid 10-digit phone number.';
            }
            return '';
        }

        function validateAddress(address) {
            if (!address) {
                return 'Address is required.';
            }
            if (address.length < 10) {
                return 'Address must be at least 10 characters long.';
            }
            return '';
        }

        // Real-time validation on input
        companyNameInput.addEventListener('input', function() {
            const error = validateCompanyName(this.value);
            companyNameError.textContent = error;
            companyNameError.style.display = error ? 'block' : 'none';
            this.classList.toggle('error', !!error);
        });

        emailInput.addEventListener('input', function() {
            const error = validateEmail(this.value);
            emailError.textContent = error;
            emailError.style.display = error ? 'block' : 'none';
            this.classList.toggle('error', !!error);
        });

        phoneInput.addEventListener('input', function() {
            const error = validatePhone(this.value);
            phoneError.textContent = error;
            phoneError.style.display = error ? 'block' : 'none';
            this.classList.toggle('error', !!error);
        });

        addressInput.addEventListener('input', function() {
            const error = validateAddress(this.value);
            addressError.textContent = error;
            addressError.style.display = error ? 'block' : 'none';
            this.classList.toggle('error', !!error);
        });

        // Form submit validation
        form.addEventListener('submit', async function(event) {
            event.preventDefault();

            // Validate all fields
            const companyNameErrorMsg = validateCompanyName(companyNameInput.value);
            const emailErrorMsg = validateEmail(emailInput.value);
            const phoneErrorMsg = validatePhone(phoneInput.value);
            const addressErrorMsg = validateAddress(addressInput.value);

            companyNameError.textContent = companyNameErrorMsg;
            companyNameError.style.display = companyNameErrorMsg ? 'block' : 'none';
            emailError.textContent = emailErrorMsg;
            emailError.style.display = emailErrorMsg ? 'block' : 'none';
            phoneError.textContent = phoneErrorMsg;
            phoneError.style.display = phoneErrorMsg ? 'block' : 'none';
            addressError.textContent = addressErrorMsg;
            addressError.style.display = addressErrorMsg ? 'block' : 'none';

            // Highlight errors
            companyNameInput.classList.toggle('error', !!companyNameErrorMsg);
            emailInput.classList.toggle('error', !!emailErrorMsg);
            phoneInput.classList.toggle('error', !!phoneErrorMsg);
            addressInput.classList.toggle('error', !!addressErrorMsg);

            if (companyNameErrorMsg || emailErrorMsg || phoneErrorMsg || addressErrorMsg) {
                errorMessage.textContent = 'Please fix the errors above.';
                return;
            }

            errorMessage.textContent = '';
            successMessage.textContent = '';
            submitBtn.disabled = true;

            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            try {
                const response = await fetch('/admin/company/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (response.ok) {
                    successMessage.textContent = result.message || 'Company added successfully!';
                    setTimeout(() => {
                        window.location.href = '/admin/company';
                    }, 1500);
                } else {
                    errorMessage.textContent = result.error || 'Error adding company';
                }
            } catch (error) {
                errorMessage.textContent = 'Network error: ' + error.message;
            } finally {
                submitBtn.disabled = false;
            }
        });
    </script>
</body>
</html>